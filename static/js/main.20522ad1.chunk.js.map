{"version":3,"sources":["assets/icons/heart.svg","components/Favorite/index.tsx","components/Button/index.tsx","components/DialogOpener/index.tsx","components/ConfirmationDialog/index.tsx","components/Loader/index.tsx","components/Table/index.tsx","shared/actions/index.ts","shared/notifier/index.ts","pages/Home/WeatherReport.tsx","shared/utils.ts","config/index.ts","shared/storage.ts","shared/useCity/index.ts","shared/useWeather/index.ts","pages/Home/Home.tsx","assets/icons/chevron-right.svg","components/Layout/PageHeader.tsx","components/Layout/PageContent.tsx","components/ErrorBoundary.tsx","components/Layout/index.tsx","pages/Home/index.tsx","pages/WeatherInfo/WeatherDetails.tsx","components/Input/index.tsx","pages/WeatherInfo/UserDetails.tsx","pages/WeatherInfo/WeatherInfo.tsx","pages/WeatherInfo/index.tsx","pages/NotFound.tsx","Routes.tsx","components/Container/index.tsx","App.tsx","reportWebVitals.ts","swDev.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgHeart","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","id","ForwardRef","Favorite","name","label","checked","onChange","disabled","htmlFor","className","data-testid","type","cx","Button","children","onClick","variant","DialogOpener","component","dialogSize","useState","isOpen","setIsOpen","toggleDialog","open","event","onRequestClose","overlayClassName","ConfirmationDialog","onCancel","onConfirm","Loader","loading","size","renderChildren","tag","keepInView","blocking","loader","width","height","fill","strokeWidth","strokeLinecap","cy","r","Table","columns","items","noDataMessage","stickyHeader","map","column","index","sticky","style","textAlign","header","item","rowIndex","columnIndex","accessor","cell","getFavorites","JSON","parse","localStorage","getItem","filter","data","isFavorite","saveUserData","userData","find","cityName","notes","push","setItem","stringify","getRemovedCities","showNotification","debounce","message","timeout","toast","autoClose","sortItems","favoriteCities","favoriteCity","city","sort","item1","item2","localeCompare","WeatherReport","weatherCollection","handleFetchNewCities","setItems","sortedItems","setSortedItems","useEffect","_sortedItems","handleIsFavoriteChange","handleRemoveCity","close","removedCities","includes","removeCity","prevValue","to","temperature","Math","round","render","online","fetcher","input","init","a","undefined","fetch","response","json","result","status","error","compareCityNames","str1","str2","arr1","toLocaleLowerCase","replace","split","arr2","every","uniqBy","arr","predicate","cb","o","reduce","has","set","Map","values","BASE_URL","writeToStorage","queryKey","storageData","fetchCities","rows","query","exclude","params","url","join","cities","useCity","useQuery","cacheTime","staleTime","refetchOnWindowFocus","retry","onSuccess","isLoading","isError","records","record","fields","accentcity","fetchWeather","weather","Error","info","useWeather","cityNames","weatherQueries","useQueries","queryFn","location","current","precipitation","precip","humidity","windSpeed","wind_speed","imageSource","weather_icons","some","Home","forceUpdate","excludedCities","citiesLoading","citiesHasError","citiesError","weatherCollectionLoading","weatherCollectionHasError","weatherCollectionError","updateExcludedCities","transform","SvgChevronRight","EnhancedPageHeader","compose","withRouter","showBackButton","history","selectedCity","loadCities","citiesJson","_cities","value","Promise","resolve","selectCity","_city","cacheOptions","loadOptions","classNamePrefix","placeholder","noOptionsMessage","inputValue","isDisabled","PageContent","ErrorBoundary","state","hasError","errorInfo","console","Component","EnhancedLayout","showHeaderBackButton","match","HomeContainer","WeatherDetails","weatherInfo","src","alt","Input","UserDetails","setNotes","setIsFavorite","hasUnsavedChanges","setHasUnsavedChanges","initialValues","getUserData","window","onbeforeunload","isCityRemoved","onSubmit","preventDefault","when","EnhancedWeatherInfo","WeatherInfoContainer","NotFound","Routes","exact","path","Container","queryClient","QueryClient","App","ReactModal","setAppElement","queriesWithData","queryKeyParsed","setQueryData","readFromStorage","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","swDev","swUrl","process","navigator","serviceWorker","register","log","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20522ad1.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 200 v-200 h200      a100,100 90 0,1 0,200     a100,100 90 0,1 -200,0     z\"\n});\n\nfunction SvgHeart(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 342 315\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeart);\nexport default __webpack_public_path__ + \"static/media/heart.8e621e85.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FunctionComponent, ReactNode } from 'react';\nimport cx from 'classnames';\n\nimport { ReactComponent as HeartIcon } from '../../assets/icons/heart.svg';\n\ninterface Props {\n  id?: string;\n  name: string;\n  label?: ReactNode;\n  checked: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n  disabled?: boolean;\n}\n\nconst Favorite: FunctionComponent<Props> = ({\n  id, name, label,\n  checked, onChange, disabled\n}) => (\n  <>\n    <label htmlFor={id || name} className=\"favorite-container\">\n      <input\n        data-testid=\"checkbox\"\n        id={id || name}\n        name={name}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      <div className={cx('favorite-visuals', { disabled })}>\n        <span className=\"favorite-label\">{label}</span>\n        <HeartIcon className={cx('icon', { checked })} />\n      </div>\n    </label>\n  </>\n);\n\nexport default Favorite;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport cx from 'classnames';\n\ninterface Props {\n  children: ReactNode,\n  onClick: React.MouseEventHandler,\n  type?: 'button' | 'submit' | 'reset',\n  variant?: 'contained' | 'outlined' | 'text',\n  className?: string,\n  disabled?: boolean,\n};\n\nconst Button: FunctionComponent<Props> = ({\n  children, onClick, type = 'button',\n  variant = 'contained', className, disabled,\n}) => (\n  <button\n    type={type}\n    className={cx('button', className, variant)}\n    disabled={disabled}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React, { ReactNode, FunctionComponent, useState } from 'react';\nimport Dialog from 'react-modal';\nimport cx from 'classnames';\n\nexport type OpenFunction = (\n  event?: React.KeyboardEvent | React.MouseEvent\n) => void\n\nexport type CloseFunction = (\n  event?: React.KeyboardEvent | React.MouseEvent\n) => void\n\ninterface Props {\n  component: (open: OpenFunction) => ReactNode;\n  children: (close: CloseFunction) => ReactNode;\n  dialogSize?: 'small' | 'medium' | 'large';\n  className?: string;\n}\n\nconst DialogOpener: FunctionComponent<Props> = (props) => {\n  const {\n    component,\n    children,\n    dialogSize = 'small',\n    className,\n  } = props\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleDialog = (open: boolean) => (\n    event?: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event as React.KeyboardEvent).key !== 'Return'\n    ) {\n      return;\n    }\n\n    setIsOpen(open);\n  }\n\n  return (\n    <div>\n      {component(toggleDialog(true))}\n      <Dialog\n        isOpen={isOpen}\n        onRequestClose={() => toggleDialog(false)}\n        className={cx('dialog', dialogSize, className)}\n        overlayClassName=\"dialog-overlay\"\n      >\n        {children(toggleDialog(false))}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DialogOpener;\n\n","import React, { FunctionComponent } from 'react'\nimport { CloseFunction } from '../DialogOpener'\nimport Button from '../Button';\n\ninterface Props {\n  title: string\n  children: string\n  onCancel: CloseFunction\n  onConfirm: React.MouseEventHandler\n}\n\nconst ConfirmationDialog: FunctionComponent<Props> = ({ title, children, onCancel, onConfirm }) => {\n  return (\n    <div className=\"confirmation-dialog\">\n      <h2 className=\"dialog-title\">{title}</h2>\n      <div className=\"dialog-content\">\n        {children}\n      </div>\n      <div className=\"dialog-actions\">\n        <Button onClick={onCancel} variant=\"text\">Cancel</Button>\n        <Button onClick={onConfirm}>Confirm</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationDialog;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport BlockUI from 'react-block-ui';\n\ninterface Props {\n  children: ReactNode | ReactNode[];\n  loading: boolean;\n  size?: number | string;\n  renderChildren?: boolean;\n};\n\nconst Loader: FunctionComponent<Props> = ({ children, loading, size = 50, renderChildren = true }) => (\n  <BlockUI\n    tag=\"div\"\n    className=\"loader\"\n    keepInView\n    blocking={loading}\n    renderChildren={renderChildren}\n    loader={(\n      <svg\n        data-testid=\"spinner\"\n        className=\"spinner\"\n        width={size}\n        height={size}\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"path\"\n          fill=\"none\"\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    )}\n  >\n    {children}\n  </BlockUI>\n);\n\nexport default Loader;\n","import React, { PropsWithChildren, ReactElement, ReactNode } from 'react';\nimport cx from 'classnames';\n\nimport Loader from '../Loader';\n\nexport type TextAlign = 'left' | 'right' | 'center';\n\nexport interface Column<Item> {\n  accessor?: string,\n  cell?: (item: Item) => ReactNode,\n  header?: string,\n  width?: string | number,\n  textAlign?: TextAlign\n}\n\ninterface Props<Item> {\n  columns: Column<Item>[],\n  items: Item[],\n  className?: string,\n  loading?: boolean,\n  noDataMessage?: string,\n  stickyHeader?: boolean,\n}\n\nconst Table = <Item, >(props: PropsWithChildren<Props<Item>>): ReactElement => {\n  const { columns, items, className, loading = false, noDataMessage = 'No data available', stickyHeader = false } = props;\n  \n  if (!loading && items.length === 0) {\n    return (\n      <div className=\"no-data\">\n        {noDataMessage}\n      </div>\n    )\n  }\n\n  return (\n    <Loader loading={loading}>\n      <table data-testid=\"table\" className={cx('table', className)}>\n        <thead>\n          <tr>\n            {\n              columns.map((column, index) => (\n                <th\n                  key={`${column.header}-${index}`}\n                  className={cx({ sticky: !!stickyHeader })}\n                  style={{\n                    width: column.width || 'unset',\n                    textAlign: column.textAlign || 'left',\n                  }}\n                >\n                  {column.header}\n                </th>\n              ))\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            items.map((item, rowIndex) => (\n              <tr key={rowIndex}>\n                {\n                  columns.map((column, columnIndex) => (\n                    <td\n                      key={`${rowIndex}-${columnIndex}`}\n                      style={{\n                        width: column.width || 'unset',\n                        textAlign: column.textAlign || 'left',\n                      }}\n                    >\n                      {\n                        (() => {\n                          if (column.accessor) return Object(item as unknown)[column.accessor];\n                          if (column.cell) return column.cell(item);\n                        })()\n                      }\n                    </td>\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </Loader>\n  )\n};\n\nexport default Table;\n","import { UserData } from '../interfaces';\n\nexport const getFavorites = () => {\n  const userData: UserData[] = JSON.parse(localStorage.getItem('user-data') || '[]');\n  const favorites = userData.filter(data => data.isFavorite);\n  return favorites;\n};\n\nexport const getUserData = (cityName: string) => {\n  const userData: UserData[] = JSON.parse(localStorage.getItem('user-data') || '[]');\n  return userData.find(data => data.cityName === cityName);\n};\n\nexport const saveUserData = (data: UserData) => {\n  let userData: UserData[] = JSON.parse(localStorage.getItem('user-data') || '[]');\n  if (userData.find(item => item.cityName === data.cityName)) {\n    if (!data.isFavorite && !data.notes) {\n      userData = userData.filter(item => item.cityName !== data.cityName);\n    } else {\n      userData = userData.map(item => {\n        if (item.cityName === data.cityName) return data;\n        return item;\n      });\n    }\n  } else if (data.isFavorite || data.notes) {\n    userData.push(data);\n  }\n  localStorage.setItem('user-data', JSON.stringify(userData));\n};\n\nexport const getRemovedCities = () => {\n  const removedCities: string[] = JSON.parse(localStorage.getItem('removed-cities') || '[]');\n  return removedCities;\n};\n\nexport const removeCity = (name: string) => {\n  const removedCities = getRemovedCities();\n  if (!removedCities.includes(name)) removedCities.push(name);\n  localStorage.setItem('removed-cities', JSON.stringify(removedCities));\n  return removedCities;\n};\n\nexport const restoreCity = (name: string) => {\n  let removedCities = getRemovedCities();\n  removedCities = removedCities.filter(city => city !== name);\n  localStorage.setItem('removed-cities', JSON.stringify(removedCities));\n  return removedCities;\n};\n\nexport const getExcludedCities = () => {\n  const excludedCities = JSON.parse(localStorage.getItem('excluded-cities') || '[]');\n  return excludedCities;\n};\n\nexport const updateExcludedCities = () => {\n  const removedCities = getRemovedCities();\n  localStorage.setItem('excluded-cities', JSON.stringify(removedCities));\n};\n","import { ReactText } from 'react';\nimport { toast } from 'react-toastify';\nimport debounce from 'debounce-promise';\n\nexport const showNotification: (\n  message: string,\n  type?: 'success' | 'error',\n  timeout?: number,\n) => Promise<ReactText>\n  = debounce((message: string, type: 'success' | 'error' = 'success', timeout: number = 5000): ReactText => toast(\n      message, { type, autoClose: timeout },\n    ), 300);\n\nexport const dismissNotification = (toastPromise: Promise<ReactText>) => toastPromise.then((toastId) => {\n  toast.dismiss(toastId)\n});\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Detector } from 'react-detect-offline';\n\nimport Favorite from '../../components/Favorite';\nimport Button from '../../components/Button';\nimport DialogOpener, { OpenFunction, CloseFunction } from '../../components/DialogOpener';\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\nimport Table, { TextAlign } from '../../components/Table';\nimport { Weather } from '../../shared/interfaces';\nimport { getFavorites, removeCity, saveUserData } from '../../shared/actions';\nimport { showNotification } from '../../shared/notifier';\n\ninterface Props {\n  weatherCollection: Weather[];\n  loading: boolean;\n  handleFetchNewCities?: () => void;\n}\n\nexport interface EnhancedWeather extends Weather {\n  isFavorite: boolean;\n}\n\nconst sortItems = (items: Weather[]) => {\n  const favoriteCities = getFavorites();\n  const sortedItems = items\n    .map(item => {\n      const favoriteCity = favoriteCities.find(city => city.cityName === item.name);\n      const isFavorite = !!favoriteCity?.isFavorite;\n      return {\n        ...item,\n        isFavorite,\n      };\n    })\n    .sort((item1, item2) =>\n      +item2.isFavorite - +item1.isFavorite\n      || item1.name.localeCompare(item2.name)\n    );\n  return sortedItems;\n}\n\nconst WeatherReport: FunctionComponent<Props> = ({\n  weatherCollection,\n  loading,\n  handleFetchNewCities = () => {},\n}) => {\n  const [items, setItems] = useState(weatherCollection);\n  const [sortedItems, setSortedItems] = useState<EnhancedWeather[]>([]);\n\n  useEffect(() => {\n    setItems(weatherCollection);\n  }, [weatherCollection]);\n\n  useEffect(() => {\n    const _sortedItems = sortItems(items);\n    setSortedItems(_sortedItems);\n  }, [items]);\n\n  const handleIsFavoriteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n    const favoriteCities = getFavorites();\n    const notes = favoriteCities.find(city => city.cityName === name)?.notes || '';\n    saveUserData({ cityName: name, isFavorite: checked, notes });\n    showNotification(checked ? 'Marked as favorite!' : 'Removed from favorites!', 'success', 2000);\n    const _sortedItems = sortItems(items);\n    setSortedItems(_sortedItems);\n  };\n\n  const handleRemoveCity = (close: CloseFunction, name: string) => {\n    removeCity(name);\n    setItems(prevValue => [...prevValue.filter(item => item.name !== name)]);\n    showNotification('City removed!');\n    close();\n  };\n\n  const columns = [\n    {\n      header: 'City',\n      cell: ({ name, title }: EnhancedWeather) => <Link to={`/${name}`} className=\"city\">{title}</Link>\n    },\n    {\n      header: 'Temp',\n      cell: ({ temperature }: EnhancedWeather) => (\n        <div className=\"temperature\">\n          <span className=\"celcius\">{`${temperature}°C`}</span>\n          <span className=\"fahrenheit\">{` (~${Math.round(temperature * (9 / 5)) + 32}°F)`}</span>\n        </div>\n      )\n    },\n    {\n      header: '',\n      cell: ({ name, isFavorite }: EnhancedWeather) => (\n        <Favorite\n          name={name}\n          checked={isFavorite}\n          onChange={handleIsFavoriteChange}\n        />\n      )\n    },\n    {\n      header: '',\n      cell: ({ name, title }: EnhancedWeather) => (\n        <DialogOpener\n          component={(open: OpenFunction) => \n            <Button variant=\"text\" onClick={() => open()}>Remove</Button>\n          }\n        >\n          {\n            (close: CloseFunction) => (\n              <ConfirmationDialog\n                title=\"Are you sure?\"\n                onCancel={() => close()}\n                onConfirm={() => handleRemoveCity(close, name)}\n              >\n                {`This operation will delete ${title} permanently from Weather Report. There is no way back to get it. \\n Are you sure you want to delete it?`}\n              </ConfirmationDialog>\n            )\n          }\n        </DialogOpener>\n      ),\n      textAlign: 'right' as TextAlign,\n    },\n  ];\n\n  if(!loading && items.length === 0) {\n    return (\n      <div className=\"no-data\">\n        <span>You have removed all the cities.</span>\n        <Detector render={({ online }) => (\n          <Button onClick={handleFetchNewCities} disabled={!online}>\n            Fetch new cities\n          </Button>\n        )} />\n      </div>\n    );\n  }\n\n  return (\n    <Table columns={columns} items={sortedItems} loading={loading} />\n  ); \n};\n\nexport default WeatherReport;","export const fetcher = async (input: RequestInfo, init?: RequestInit | undefined) => {\n  if (!input) {\n    return undefined;\n  }\n\n  const response = await fetch(input, init);\n  const result = await response.json();\n  if(response.status < 200 || response.status >= 300) {\n    throw result.error || result;\n  }\n  return result;\n};\n\nexport const compareCityNames = (str1: string, str2: string) => {\n  const arr1 = str1.toLocaleLowerCase().replace(/^new /i, 'new#').split(' ');\n  const arr2 = str2.toLocaleLowerCase().replace(/^new /i, 'new#').split(' ');\n\n  return arr1.every(item => arr2.includes(item)) || arr2.every(item => arr1.includes(item));\n}\n\nexport const uniqBy = <T>(arr: Array<T>, predicate: keyof T | ((value: T, index?: number, array?: T[]) => value is T)) => {\n  const cb = typeof predicate === 'function' ? predicate : (o: T) => o[predicate];\n\n  return [\n    ...arr.reduce((map, item) => {\n      const key = cb(item);\n      map.has(key) || map.set(key, item);\n      return map;\n    }, new Map()).values()\n  ];\n};\n","export const BASE_URL = {\n  CITIES_SERVICE: 'https://public.opendatasoft.com/api/records/1.0/search',\n  WEATHER_SERVICE: 'https://api.weatherstack.com/current',\n};\n\nexport const WEATHER_STACK_API_KEY = '401ec645dd28b1e58cc864f64a6afc02'; \n","import { QueryClient } from 'react-query';\n\n// Persist to wherever using the super-secret object\nconst writeToStorage = async (queryKey: string, data: any) => {\n  let storageData = localStorage.getItem('queries');\n\n  storageData = {\n    ...JSON.parse(storageData ?? '{}'),\n    [queryKey]: data,\n  };\n  localStorage.setItem('queries', JSON.stringify(storageData));\n};\n\n// Hydrate from localStorage\n\nconst readFromStorage = (queryClient: QueryClient) => {\n  const storageData = localStorage.getItem('queries');\n\n  if (storageData !== null) {\n    const queriesWithData = JSON.parse(storageData);\n\n    for (const queryKey in queriesWithData) {\n      const data = queriesWithData[queryKey];\n      const queryKeyParsed = JSON.parse(queryKey);\n      queryClient.setQueryData(queryKeyParsed, data);\n    }\n  }\n};\n\nexport {readFromStorage, writeToStorage};\n","import { useQuery } from 'react-query';\n\nimport { City } from '../interfaces';\nimport { fetcher } from '../utils';\nimport { BASE_URL } from '../../config';\nimport { writeToStorage } from '../storage';\n\nexport type SortType = 'population';\n\ninterface Props {\n  rows: number;\n  query?: string;\n  sort?: SortType;\n  exclude?: string[];\n}\n\ninterface CitiesResponse {\n  records: {\n    fields: {\n      city: string;\n      accentcity: string;\n    }\n  }[]\n}\n\nconst fetchCities = async ({ rows, query, sort, exclude }: Props): Promise<CitiesResponse> => {\n  try {\n    const params = [`rows=${rows}`];\n    if (query) params.push(`q=${query}`);\n    if (sort) params.push(`sort=${sort}`);\n    if (exclude && exclude.length > 0) params.push(...exclude.map(city => `exclude.city=${city}`))\n\n    const url = `${BASE_URL.CITIES_SERVICE}?dataset=worldcitiespop&facet=city&${params.join('&')}`;\n    const cities: CitiesResponse = await fetcher(url);\n    return cities;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst useCity = ({ rows, query, sort, exclude }: Props) => {\n  const queryKey = ['cities', { rows, query, sort, exclude }];\n  const { data, isLoading, isError, error } = useQuery(\n    queryKey,\n    () => fetchCities({ rows, query, sort, exclude }),\n    {\n      cacheTime: 86400000,\n      staleTime: 7200000,\n      refetchOnWindowFocus: false,\n      retry: 0,\n      onSuccess: (data) => writeToStorage(JSON.stringify(queryKey), data),\n    }\n  );\n  const cities: City[] = data?.records.map(record => ({ name: record.fields.city, title: record.fields.accentcity })) || [];\n  return { cities, isLoading, isError, error: error as Error };\n};\n\nexport default useCity;\n","import { useQueries } from 'react-query';\n\nimport { Weather } from '../interfaces';\nimport { compareCityNames, fetcher } from '../utils';\nimport { BASE_URL, WEATHER_STACK_API_KEY } from '../../config';\nimport { writeToStorage } from '../storage';\n\nexport type SortType = 'population';\n\ninterface Props {\n  cityNames: string[];\n}\n\ninterface WeatherResponse {\n  location: {\n    name: string;\n  };\n  current: {\n    temperature: number;\n    precip: number;\n    humidity: number;\n    wind_speed: number;\n    weather_icons: string[];\n  }\n}\n\ninterface InternalError {\n  error?: {\n    code: number;\n    info: string;\n  }\n}\n\nconst fetchWeather = async (cityName: string): Promise<WeatherResponse> => {\n  try {\n    const url = `${BASE_URL.WEATHER_SERVICE}?access_key=${WEATHER_STACK_API_KEY}&query=${cityName}`;\n    const weather: WeatherResponse & InternalError = await fetcher(url);\n    if (weather.error) {\n      throw new Error(weather.error.info);\n    }\n    return weather;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst useWeather = ({ cityNames }: Props) => {\n  const weatherQueries = useQueries(\n    cityNames.map(cityName => {\n      const queryKey = ['city', cityName];\n      return {\n        queryKey: queryKey,\n        queryFn: () => fetchWeather(cityName),\n        cacheTime: 86400000,\n        staleTime: 600000,\n        retry: 0,\n        onSuccess: (data) => writeToStorage(JSON.stringify(queryKey), data),\n      };\n    })\n  )\n\n  const weatherCollection: Weather[] = weatherQueries\n    .filter(item => item.data)\n    .filter(item => {\n      const { data } = item;\n      if(!item.data) return true;\n      const { location, current } = data as WeatherResponse;\n      return (location && current && cityNames.find(city => compareCityNames(city, location?.name || '')));\n    })\n    .map(item => {\n      const { data } = item;\n      const { location, current } = data as WeatherResponse;\n      return {\n        name: cityNames.find(city => compareCityNames(city, location.name || '')) || location.name,\n        title: location.name,\n        temperature: current.temperature,\n        precipitation: current.precip,\n        humidity: current.humidity,\n        windSpeed: current.wind_speed,\n        imageSource: current.weather_icons[0],\n      };\n    });\n\n  const isLoading = weatherQueries.some(item => item.isLoading);\n  const isError = weatherQueries.some(item => item.isError);\n  const error = weatherQueries.find(item => item.error);\n\n  return { weatherCollection, isLoading, isError, error: (error as unknown) as Error };\n};\n\nexport default useWeather;","import React, { FunctionComponent, useState } from 'react';\n\nimport WeatherReport from './WeatherReport';\nimport { getExcludedCities, getFavorites, getRemovedCities, updateExcludedCities } from '../../shared/actions';\nimport { showNotification } from '../../shared/notifier';\nimport useCity from '../../shared/useCity';\nimport useWeather from '../../shared/useWeather';\n\nexport const PAGE_SIZE = 2;\n\nconst Home: FunctionComponent = () => {\n  const [, forceUpdate] = useState(false);\n\n  const excludedCities = getExcludedCities();\n  const {\n    cities, isLoading: citiesLoading,\n    isError: citiesHasError, error: citiesError\n  } = useCity({\n    rows: PAGE_SIZE,\n    sort: 'population',\n    exclude: excludedCities,\n  });\n\n  const removedCities = getRemovedCities();\n  const favoriteCities = getFavorites().map(city => city.cityName);\n\n  const {\n    weatherCollection, isLoading: weatherCollectionLoading,\n    isError: weatherCollectionHasError, error: weatherCollectionError,\n  } = useWeather({\n    cityNames: [\n      ...cities\n        .filter(city => {\n          if(removedCities.includes(city.name)) return false;\n          if(favoriteCities.includes(city.name)) return false;\n          return true;\n        })\n        .map(city => city.name),\n      ...favoriteCities.filter(city => !removedCities.includes(city)),\n    ]\n  });\n\n  const handleFetchNewCities = () => {\n    updateExcludedCities();\n    forceUpdate(prevValue => !prevValue);\n  };\n\n  if (citiesHasError) {\n    showNotification(citiesError.message, 'error');\n  }\n\n  if (weatherCollectionHasError) {\n    if (weatherCollectionError?.message) {\n      showNotification(weatherCollectionError.message);\n    }\n  }\n  \n  if(!citiesLoading && cities.length === 0) {\n    return <div className=\"no-data\">No data available!</div>\n  }\n  \n  return (\n    <div className=\"home\">\n      <WeatherReport\n        weatherCollection={weatherCollection}\n        loading={citiesLoading || weatherCollectionLoading}\n        handleFetchNewCities={handleFetchNewCities}\n      />\n    </div>\n  )\n};\n\nexport default Home;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m23.547619 11 4.1904762-4.69333333.2619048-.30666667-.2619048-.30666667-4.1904762-4.69333333-.547619.61333333 3.9166667 4.38666667-3.9166667 4.3866667z\",\n  transform: \"translate(-23 -1)\"\n});\n\nfunction SvgChevronRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#aa80ff\",\n    viewBox: \"0 0 5 10\",\n    width: 8,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronRight);\nexport default __webpack_public_path__ + \"static/media/chevron-right.303fe306.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FunctionComponent, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { ValueType } from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport debounce from 'debounce-promise';\nimport { compose } from 'recompose';\nimport { Detector } from 'react-detect-offline';\n\nimport { ReactComponent as ChevronRightIcon } from '../../assets/icons/chevron-right.svg';\nimport { uniqBy } from '../../shared/utils';\nimport { showNotification } from '../../shared/notifier';\nimport { BASE_URL } from '../../config';\n\ninterface Props {\n  showBackButton?: boolean;\n}\n\ninterface EnhancedProps {\n  history: {\n    push: Function;\n  }\n}\n\ninterface CitiesResponse {\n  records: {\n    fields: {\n      city: string;\n      accentcity: string;\n    }\n  }[]\n}\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\nconst PageHeader: FunctionComponent<Props & EnhancedProps> = ({ showBackButton = false, history }) => {\n  const [selectedCity, setSelectedCity] = useState<ValueType<Option>>(null);\n\n  const loadCities = debounce(\n    async (input: string) => {\n      try {\n        const cities = await fetch(`${BASE_URL.CITIES_SERVICE}?dataset=worldcitiespop&rows=10&q=${input}`);\n        const citiesJson: CitiesResponse = await cities.json();\n        const _cities = citiesJson.records.map(record => ({ label: record.fields.accentcity, value: record.fields.city }));\n        return new Promise<Option[]>((resolve) => resolve(uniqBy(_cities, 'value')));\n      } catch (err) {\n        showNotification(err.message, 'error');\n      }\n    },\n    300\n  );\n\n  const selectCity = (_city: ValueType<Option>) => {\n    history.push(`/${Object(_city).value}`);\n  }\n\n  return (\n    <section className=\"page-header\">\n      <div className=\"left\">\n        {\n          showBackButton && (\n            <div className=\"back\">\n              <ChevronRightIcon className=\"back-icon\" />\n              <Link to=\"/\" className=\"link\">Back to Home</Link>\n            </div>\n          )\n        }\n        <h1>\n          Weather Report\n        </h1>\n      </div>\n      <div className=\"right\">\n        <Detector\n          render={({ online }) => (\n            <AsyncSelect\n              cacheOptions\n              loadOptions={loadCities}\n              className=\"react-select\"\n              classNamePrefix=\"react-select\"\n              value={selectedCity}\n              onChange={selectCity}\n              placeholder=\"Search...\"\n              noOptionsMessage={({ inputValue }) => inputValue ? `No match found for ${inputValue}` : 'Start typing to search'}\n              isDisabled={!online}\n            />\n          )}\n        />\n      </div>\n    </section>\n  );\n};\n\nconst EnhancedPageHeader = compose<Props & EnhancedProps, Props>(withRouter)(PageHeader);\n\nexport default EnhancedPageHeader;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode | ReactNode[];\n};\n\nconst PageContent: FunctionComponent<Props> = ({ children }) => (\n  <section className=\"page-content\">\n    {children}\n  </section>\n);\n\nexport default PageContent;","import React, { Component, ErrorInfo, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  public render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return (\n        <p className=\"error-boundary\">\n          {'Sorry, something went wrong!'}\n        </p>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { compose } from 'recompose';\nimport cx from 'classnames';\n\nimport PageHeader from './PageHeader';\nimport PageContent from './PageContent';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { withRouter } from 'react-router';\n\ninterface Props {\n  className?: string;\n  children: ReactNode | ReactNode[];\n  showHeaderBackButton?: boolean\n}\n\ninterface EnhancedProps {\n  match: {\n    params: {\n      cityName: string;\n    }\n  }\n}\n\nconst Layout: FunctionComponent<Props & EnhancedProps> = ({\n  className, children,\n  showHeaderBackButton, match,\n}) => (\n  <div className={cx('layout', className)}>\n    <ErrorBoundary>\n      <PageHeader showBackButton={showHeaderBackButton} />\n    </ErrorBoundary>\n    <ErrorBoundary key={match.params.cityName}>\n      <PageContent>\n        {children}\n      </PageContent>\n    </ErrorBoundary>\n  </div>\n);\n\nconst EnhancedLayout = compose<Props & EnhancedProps, Props>(withRouter)(Layout);\n\nexport default EnhancedLayout;\n","import React, { FunctionComponent } from 'react';\n\nimport Home from './Home';\nimport Layout from '../../components/Layout';\n\nconst HomeContainer: FunctionComponent = () => (\n  <Layout className=\"home-layout\">\n    <Home />\n  </Layout>\n);\n\nexport default HomeContainer;","import React, { FunctionComponent } from 'react';\nimport { Weather } from '../../shared/interfaces';\n\ninterface Props {\n  weather: Weather\n}\n\nconst WeatherDetails: FunctionComponent<Props> = ({ weather }) => {\n  const weatherInfo = [\n    {\n      label: 'Precipitation',\n      value: weather.precipitation && `${weather.precipitation}%`,\n    },\n    {\n      label: 'Humidity',\n      value: weather.humidity && `${weather.humidity}%`,\n    },\n    {\n      label: 'Wind',\n      value: weather.windSpeed && `${weather.windSpeed} km/h`,\n    },\n  ];\n\n  return (\n    <div className=\"weather-details\">\n      <div className=\"title\">\n        <img src={weather.imageSource} alt=\"\" />\n        <span className=\"temperature\">\n          {weather.temperature}\n          <sup>°C</sup>\n        </span>\n      </div>\n      <div className=\"info\">\n        <table>\n          <tbody>\n            {\n              weatherInfo.map(item => (\n                <tr key={item.label}>\n                  <td className=\"label\">{item.label}</td>\n                  <td className=\"value\">{item.value}</td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherDetails; \n","import React, { FunctionComponent, ReactNode } from 'react';\nimport cx from 'classnames';\n\ninterface Props {\n  id?: string;\n  name: string;\n  label?: ReactNode;\n  type?: 'text' | 'number' | 'email' | 'password' | 'textarea';\n  className?: string;\n  value: string;\n  onChange: React.ChangeEventHandler;\n  rows?: number;\n}\n\nconst Input: FunctionComponent<Props> = ({\n  id, name, label, type = 'text',\n  className, value, onChange, rows = 4\n}) => (\n  <label className=\"textbox-container\" htmlFor={id || name}>\n    {label && <span className=\"label-text\">{label}</span>}\n    {\n      type === 'textarea'\n        ? (\n          <textarea\n            data-testid=\"textarea\"\n            id={id || name}\n            name={name}\n            className={cx('textbox', className)}\n            value={value}\n            onChange={onChange}\n            rows={rows}\n          />\n        )\n        : (\n          <input\n            data-testid=\"input\"\n            id={id || name}\n            name={name}\n            type={type}\n            className={cx('textbox', className)}\n            value={value}\n            onChange={onChange}\n          />\n        )\n    }\n  </label>\n);\n\nexport default Input;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Button from '../../components/Button';\nimport Favorite from '../../components/Favorite';\nimport Input from '../../components/Input';\nimport { getRemovedCities, getUserData, saveUserData } from '../../shared/actions';\nimport { showNotification } from '../../shared/notifier';\n\ninterface Props {\n  cityName: string;\n}\n\nconst UserDetails: FunctionComponent<Props> = ({ cityName }) => {\n  const [notes, setNotes] = useState('');\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  useEffect(() => {\n    const initialValues = getUserData(cityName);\n    if (initialValues) {\n      setIsFavorite(initialValues.isFavorite);\n      setNotes(initialValues.notes);\n    }\n  }, [cityName]);\n\n  useEffect(() => {\n    if (hasUnsavedChanges) {\n      window.onbeforeunload = () => true;\n    } else {\n      window.onbeforeunload = null;\n    }\n    return () => {\n      window.onbeforeunload = null;\n    }\n  }, [hasUnsavedChanges]);\n\n  const handleNotesChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setNotes(value);\n    setHasUnsavedChanges(true);\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    saveUserData({ cityName, isFavorite, notes });\n    showNotification('Notes saved!', 'success', 3000);\n    setHasUnsavedChanges(false);\n  };\n\n  const handleIsFavoriteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = event.target;\n    saveUserData({ cityName, isFavorite: checked, notes });\n    setIsFavorite(checked);\n    showNotification(checked ? 'Marked as favorite!' : 'Removed from favorites!', 'success', 2000);\n  };\n\n  const isCityRemoved = getRemovedCities().includes(cityName);\n\n  return (\n    <div className=\"user-details\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"notes-container\">\n          <Input\n            name=\"notes\"\n            type=\"textarea\"\n            className=\"notes\"\n            label=\"Notes\"\n            value={notes}\n            onChange={handleNotesChange}\n            rows={10}\n          />\n        </div>\n        <div className=\"actions\">\n          <Button type=\"submit\" onClick={() => {}}>\n            Save\n          </Button>\n          <Favorite\n            name=\"favoriteCity\"\n            checked={isCityRemoved ? false : isFavorite}\n            onChange={handleIsFavoriteChange}\n            label={isFavorite ? 'Remove from Favorites' : 'Mark as Favorite' }\n            disabled={isCityRemoved}\n          />\n        </div>\n      </form>\n      <Prompt\n        when={hasUnsavedChanges}\n        message=\"You have unsaved changes, are you sure you want to leave?\"\n      />\n    </div>\n  );\n};\n\nexport default UserDetails;\n","import React, { FunctionComponent } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router';\n\nimport WeatherDetails from './WeatherDetails';\nimport UserDetails from './UserDetails';\nimport useWeather from '../../shared/useWeather';\nimport Loader from '../../components/Loader';\nimport { showNotification } from '../../shared/notifier';\n\ninterface Props {\n\n}\n\ninterface EnhancedProps {\n  match: {\n    params: {\n      cityName: string;\n    }\n  }\n}\n\nconst WeatherInfo: FunctionComponent<Props & EnhancedProps> = ({ match }) => {\n  const { cityName } = match.params;\n  const { weatherCollection, isLoading, isError, error } = useWeather({ cityNames: [cityName] });\n\n  if (isError) {\n    showNotification(error.message, 'error');\n  }\n\n  if(!isLoading && weatherCollection.length === 0) {\n    return <div className=\"no-data\">No data available</div>\n  }\n\n  return (\n    <Loader loading={isLoading} renderChildren={false}>\n      <div className=\"weather-info\">\n        <div className=\"weather-info-title\">\n          <h1>\n            {weatherCollection[0] && weatherCollection[0].title}\n          </h1>\n        </div>\n        <div className=\"weather-info-details\">\n          <section className=\"weather-details-container\">\n            <WeatherDetails weather={weatherCollection[0]} />\n          </section>\n          <section className=\"user-details-container\">\n            <UserDetails cityName={cityName} />\n          </section>\n        </div>\n      </div>\n    </Loader>\n  );\n};\n\nconst EnhancedWeatherInfo = compose<Props & EnhancedProps, Props>(withRouter)(WeatherInfo);\n\nexport default EnhancedWeatherInfo;","import React, { FunctionComponent } from 'react';\n\nimport WeatherInfo from './WeatherInfo';\nimport Layout from '../../components/Layout';\n\nconst WeatherInfoContainer: FunctionComponent = () => (\n  <Layout className=\"weather-info-layout\" showHeaderBackButton>\n    <WeatherInfo />\n  </Layout>\n)\n\nexport default WeatherInfoContainer; ","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound: FunctionComponent = () => (\n  <div className=\"not-found\">\n    <h1>404</h1>\n    <br />\n    <p>This is not the page you are looking for.</p>\n    <br />\n    <Link to=\"/\">Go To Home Page</Link>\n  </div>\n);\n\nexport default NotFound;","import React, { FunctionComponent } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport WeatherInfo from './pages/WeatherInfo';\nimport NotFound from './pages/NotFound';\n\nconst Routes: FunctionComponent = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/:cityName\" render={(props) => <WeatherInfo key={props.match.params.id} {...props} />} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;","import React, { FunctionComponent, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode | ReactNode[]\n}\n\nconst Container: FunctionComponent<Props> = ({ children }) => (\n  <div className=\"container\">\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query-devtools'\nimport ReactModal from 'react-modal';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-block-ui/style.css';\n\nimport './assets/styles/app.scss';\nimport Routes from './Routes';\nimport Container from './components/Container';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { readFromStorage } from './shared/storage';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  useEffect(() => {\n    ReactModal.setAppElement('#root');\n    readFromStorage(queryClient);\n  }, []);\n\n  return (\n    <>\n      <div className=\"App\">\n        <ErrorBoundary>\n          <QueryClientProvider client={queryClient}>\n            <Container>\n              <ToastContainer />\n              <Routes />\n            </Container>\n            <ReactQueryDevtools />\n          </QueryClientProvider>\n        </ErrorBoundary>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","const swDev = async () => {\n  let swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n  const response = await navigator.serviceWorker.register(swUrl);\n  console.log(response);\n}\n\nexport default swDev;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport swDev from './swDev';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nswDev();\n"],"sourceRoot":""}